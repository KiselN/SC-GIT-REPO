/!* keyword: Set */
Set => nrel_main_ru_idtf: 
	[Множество] ;;
Set => nrel_main_en_idtf: 
  [ Set ] ;;	
Set <= nrel_superpartition:  
	[120. Семантический язык множеств /*раздел третьего уровня*/] ;;

Set  => nrel_main_ru_idtf: 
	[Множество] ;;

Set => nrel_ru_idtf: 
	[Вид] ;;
Set => nrel_ru_idtf: 
	[группа] ;;
Set => nrel_ru_idtf: 
	[класс] ;;
Set => nrel_ru_idtf: 
	[коллекция] ;;
Set => nrel_ru_idtf: 
	[набор] ;;
Set => nrel_ru_idtf: 
	[перечень] ;;
Set => nrel_ru_idtf: 
	[род] ;;
Set => nrel_ru_idtf: 
	[семейство] ;;
Set => nrel_ru_idtf: 
	[совокупность] ;;
Set => nrel_ru_idtf: 
	[сорт] ;;
Set => nrel_ru_idtf: 
	[тип] ;;
Set => nrel_ru_idtf: 
	[множество всех /* всевозможных */ множеств] ;;
Set => nrel_ru_idtf: 
	[понятие множества] ;;
Set => nrel_ru_idtf: 
	[универсальное множество] ;;
Set => nrel_explanation:
	[
		Множество – мысленная сущность, которая связывает одну или несколько сущностей в целое.
	];;
Set => nrel_explanation:
	[
		Множество – это многое, мыслимое нами как единое.
	];;
Set => nrel_explanation:
	[
		Представим прозрачную непроницаемую оболочку, нечто вроде плотно закрытого прозрачного мешка. Предположим, что внутри этой оболочки находятся все элементы некоторого множества S и что кроме них внутри оболочки никаких других объектов не находится. Эта оболочка с объектами x, находящимися внутри неё, и может служить образом множества S, составленного из элементов x. Сама же эта прозрачная оболочка, охватывающая все элементы (и ничего другого кроме них), довольно хорошо изображает тот акт объединения элементов x, в результате которого создаётся множество S.
	];;
Set => nrel_explanation:
	[
		Множество – это некоторое количество каких-то объектов, объединяемых в одно целое. Указанные объекты считаются элементами формируемого из них множества.
	];;
Set => nrel_explanation:
	[
		Множество – это условная "надстройка" над некоторой группой объектов любой природы, объединяющая эту группу объектов в некоторое мысленное (абстрактное) целое. Принципы (критерии) формирования множеств, т.е. признаки принадлежности тех или иных объектов к формируемому множеству, могут быть самыми различными.
	];;

Set <- Notion  ;;

Set <- Cantor_Set_1 ;;

Set <- Reflexive_Set  ;;
Set <- Not_Transitive_Set  ;;

Set <- Infinite_Set  ;;

Set <- Semantically_Normalized_Set ;;

Set <- Set_Class_Different_Type ;;
Set => nrel_ru_idtf: 
	[Разбиение (по признаку наличия кратных вхождений элементов)] ;;
Set <= nrel_subdividing:
{
	Cantor_Set_1;
	Multiset_1
};;	
Set => nrel_ru_idtf: 
	[Разбиение (по признаку рефлексивности множеств)] ;;
Set <= nrel_subdividing:
{
	Reflexive_Set;
	Not_Reflexive_Set
};;
Set => nrel_ru_idtf: 
	[Разбиение (по признаку транзитивности множеств)] ;;
Set <= nrel_subdividing:
{
	Transitive_Set;
	Not_Transitive_Set
};;
Set => nrel_ru_idtf: 
	[Разбиение (по признаку конечности множеств)] ;;
Set <= nrel_subdividing:
{
	Endless;
	Infinite_Set
};;
Set => nrel_ru_idtf: 
	[Разбиение (по признаку семантической нормализованности множеств)] ;;
Set <= nrel_subdividing:
{
	Semantically_Normalized_Set;
	Semantically_Normalized_Singleton
};;
Set => nrel_ru_idtf: 
	[Разбиение (по семантическому типу множества)] ;;
	


Set => nrel_explanation:
	[
		?	/*SCg-конструкция, представляющая в SCg-коде фрагмент приведённого выше описания семантической окрестности Понятия множества*/
	];;
Set => nrel_comment:
		"../sc-git-repo/images/Set.png";;

Set => nrel_explanation:
	[
		/* в приведённой SCg-конструкции для описания иерархической классификации используется специальное отношение разб.* (разбиение), которое будет определено далее и которое связывает множество с семейством его подмножеств, на которые оно разбивается */
	];;

Set -> rrel_explanation:
	[
		Изображение множества и его элементов. <br>
?	/*в SCg-коде*/
	];;

Set => nrel_comment:
		"../sc-git-repo/images/Set_1.png";;


Set -> rrel_explanation:
	[
		Множеству натуральных чисел принадлежат числа: 1, 2, …, n.<br>
?	/*в SCg-коде*/
	];;
Set => nrel_comment:
		"../sc-git-repo/images/Set_2.png";;

Set => nrel_explanation:
	[
		?	/*на теоретико-множественном математическом языке:*/<br>
N = {1, 2, 3, ...}.
	];;

